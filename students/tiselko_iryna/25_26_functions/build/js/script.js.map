{"version":3,"file":"script.js","mappings":";;;;;;AAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA,SAASA,MAAMA,CAAA,EAAG;EACdC,OAAO,CAACC,GAAG,CAACC,SAAS,CAACC,MAAM,CAAC;AACjC;AAEAJ,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;AAEf;AACA;AACA;AACA;;AAEA,SAASK,GAAGA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACf,IAAID,CAAC,GAAGC,CAAC,EAAE;IACP,OAAO,CAAC,CAAC;EACb,CAAC,MAAM,IAAID,CAAC,GAAGC,CAAC,EAAE;IACd,OAAO,CAAC;EACZ,CAAC,MAAM;IACH,OAAO,CAAC;EACZ;AACJ;AAEA,IAAMC,WAAW,GAAGH,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAC7BJ,OAAO,CAACC,GAAG,CAACM,WAAW,CAAC;;AAGxB;AACA,SAASC,MAAMA,CAACC,CAAC,EAAE;EACf,IAAIA,CAAC,KAAK,CAAC,EAAE;IACT,OAAO,CAAC;EACZ;EACA,OAAOD,MAAM,CAACC,CAAC,GAAG,CAAC,CAAC,GAAGA,CAAC;AAC5B;AAEA,IAAMC,SAAS,GAAGF,MAAM,CAAC,CAAC,CAAC;AAC3BR,OAAO,CAACC,GAAG,CAACS,SAAS,CAAC;;AAGtB;AACA,SAASC,IAAIA,CAACN,CAAC,EAAEC,CAAC,EAAEM,CAAC,EAAE;EACnB,OAAOP,CAAC,GAAG,GAAG,GAAGC,CAAC,GAAG,EAAE,GAAGM,CAAC;AAC/B;AAEA,IAAMC,OAAO,GAAGF,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;AAC9BX,OAAO,CAACC,GAAG,CAACY,OAAO,CAAC;;AAEpB;AACA,SAASC,MAAMA,CAACC,CAAC,EAAEC,CAAC,EAAE;EAClB,IAAID,CAAC,EAAEC,CAAC,EAAE;IACN,OAAOD,CAAC,GAAGC,CAAC;EAChB,CAAC,MAAM;IACH,OAAOD,CAAC,GAAGA,CAAC;EAChB;AACJ;AACA,IAAME,UAAU,GAAGH,MAAM,CAAC,EAAE,CAAC;AAC7Bd,OAAO,CAACC,GAAG,CAACgB,UAAU,CAAC;;AAEvB;AACA;AACA,SAASC,MAAMA,CAACT,CAAC,EAAE;EACf,IAAIU,GAAG,GAAG,CAAC;EACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,CAAC,EAAEW,CAAC,EAAE,EAAE;IACxB,IAAIX,CAAC,GAAGW,CAAC,KAAK,CAAC,EAAE;MACbD,GAAG,IAAIC,CAAC;IACZ;EACJ;EACA,OAAQD,GAAG,KAAKV,CAAC,GAAI,IAAI,GAAG,KAAK;AACrC;AAEA,IAAMY,QAAQ,GAAGH,MAAM,CAAC,EAAE,CAAC;AAC3BlB,OAAO,CAACC,GAAG,CAACoB,QAAQ,CAAC;;AAGrB;AACA,SAASC,UAAUA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EACpC,KAAK,IAAIJ,CAAC,GAAGG,QAAQ,EAAEH,CAAC,IAAII,QAAQ,EAAEJ,CAAC,EAAE,EAAE;IACvC,IAAIF,MAAM,CAACE,CAAC,CAAC,EAAE;MACXpB,OAAO,CAACC,GAAG,CAACmB,CAAC,CAAC;IAClB;EACJ;AACJ;AACA,IAAMK,eAAe,GAAGH,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC;AAC3CtB,OAAO,CAACC,GAAG,CAACwB,eAAe,CAAC,C","sources":["webpack://gulp_webpack/./src/js/script.js"],"sourcesContent":["'use strict'\r\n\r\n// Мінімум\r\n//1.Напиши всі можливі варіанти створення функцій.\r\n/* - Function declaration;\r\n    function name(parameter1, parameter2, ... parameterN) {\r\n       ...body..\r\n    }\r\n\r\n - Function Expression;\r\n    let func = function(arg1, arg2, ..., argN) {\r\n        return expression;\r\n    };\r\n\r\n - Arrow Function;\r\n    let func = (arg1, arg2, ..., argN) => expression;\r\n*/\r\n\r\n\r\n// 2.Створи функцію, яка буде виводити кількість переданих їй аргументів.\r\nfunction sumArg() {\r\n    console.log(arguments.length);\r\n}\r\n\r\nsumArg(5, 6, 5);\r\n\r\n/* 3.Напиши функцію, яка приймає 2 числа і повертає :\r\n    //1. -1, якщо перше число менше, ніж друге;\r\n    //2. 1 - якщо перше число більше, ніж друге;\r\n    //3. 0 - якщо числа рівні.*/\r\n\r\nfunction eql(a, b) {\r\n    if (a < b) {\r\n        return -1;\r\n    } else if (a > b) {\r\n        return 1;\r\n    } else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nconst compareNumb = eql(2, 8);\r\nconsole.log(compareNumb);\r\n\r\n\r\n// 4. Напиши функцію, яка обчислює факторіал переданого їй числа.\r\nfunction factor(n) {\r\n    if (n === 1) {\r\n        return 1;\r\n    }\r\n    return factor(n - 1) * n;\r\n}\r\n\r\nconst factorial = factor(5);\r\nconsole.log(factorial);\r\n\r\n\r\n// 5. Напиши функцію, яка приймає три окремі цифри і перетворює їх в одне число. Наприклад: цифри 1, 4, 9 перетворяться в число 149.\r\nfunction unif(a, b, c) {\r\n    return a * 100 + b * 10 + c;\r\n}\r\n\r\nconst unifSum = unif(10, 8, 9);\r\nconsole.log(unifSum);\r\n\r\n// 6.Напиши функцію, яка приймає довжину і ширину прямокутника і обчислює його площу. Якщо в функцію передали 1 параметр, то вона обчислює площу квадрата.\r\nfunction square(x, y) {\r\n    if (x, y) {\r\n        return x * y;\r\n    } else {\r\n        return x * x;\r\n    }\r\n}\r\nconst squareMath = square(10);\r\nconsole.log(squareMath);\r\n\r\n//Норма\r\n// 1. Напиши функцію, яка перевіряє, чи є передане їй число “досконалим числом”. Досконале число - це число, яке дорівнює сумі всіх своїх дільників.\r\nfunction sumDiv(n) {\r\n    let sum = 1;\r\n    for (let i = 2; i < n; i++) {\r\n        if (n % i === 0) {\r\n            sum += i;\r\n        }\r\n    }\r\n    return (sum === n) ? true : false;\r\n}\r\n\r\nconst prfctNum = sumDiv(28);\r\nconsole.log(prfctNum);\r\n\r\n\r\n// 2. Напиши функцію, яка приймає мінімальне і максимальне значення для діапазону, і виводить тільки ті числа з діапазону, які є досконалими. Використовуй написану раніше функцію, щоб дізнатися, чи є це число досконалим.\r\nfunction rangeValue(minValue, maxValue) {\r\n    for (let i = minValue; i <= maxValue; i++) {\r\n        if (sumDiv(i)) {\r\n            console.log(i);\r\n        }\r\n    }\r\n}\r\nconst prfctNumInRange = rangeValue(1, 9000);\r\nconsole.log(prfctNumInRange);\r\n"],"names":["sumArg","console","log","arguments","length","eql","a","b","compareNumb","factor","n","factorial","unif","c","unifSum","square","x","y","squareMath","sumDiv","sum","i","prfctNum","rangeValue","minValue","maxValue","prfctNumInRange"],"sourceRoot":""}