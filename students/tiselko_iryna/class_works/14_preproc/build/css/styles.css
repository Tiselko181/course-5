@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 400;
  src: url("./fonts/roboto-v30-latin-regular.woff2") format("woff2");
}
@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 400;
  src: url("./fonts/roboto-v30-latin-500 500.woff2") format("woff2");
}
body {
  font-family: "Roboto", Arial, Helvetica, sans-serif;
  background-color: lightgray;
}

.container {
  padding: 15px;
  max-width: 1200px;
  margin: 0 auto;
}

.menu__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.header .container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
}
.header .logo {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  font-size: 50px;
  background-color: aqua;
}
.header .logo img {
  width: 50px;
}
.header .logo + .search {
  padding: 15px;
}
.header > .menu {
  border-color: brown;
}
.header .menu {
  padding: 15px;
}
.header .menu__wrapper {
  list-style-type: none;
}
.header .menu__link {
  font-style: 25px;
}
.header .menu__link:hover {
  color: red;
}
.header .menu__link::after {
  content: "dfgsfghs";
}

.active .menu__link {
  color: red;
}
.menu__item:hover + .menu__item .menu__link {
  color: green;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
